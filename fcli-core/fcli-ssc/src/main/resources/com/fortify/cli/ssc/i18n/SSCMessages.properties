# Used to 'productize' some descriptions defined in FortifyCLIMessages.properties
product=SSC
default-connect-timeout = 10 seconds
default-socket-timeout = 60 seconds

# Make sure none of the commands inherit usage header or description of the top-level fcli command
# Note that we define these as usage.* whereas our parent bundle defines fcli.usage.* (with fcli prefix).
# For some reason, overriding fcli.usage.* doesn't work.
usage.header = 
usage.description = 

# fcli ssc
fcli.ssc.usage.header = Interact with Fortify Software Security Center (SSC).
fcli.ssc.usage.description.0 = The commands in this module allow for interacting with \
  Fortify Software Security Center (SSC). This includes functionality like managing \
  applications, application versions and their contents like artifacts and vulnerability \
  data, as well as working with other SSC entities like event logs, alerts, plugins, and so on.  
fcli.ssc.usage.description.1 = %nBefore being able to interact with SSC, a session will need \
  to be created by passing SSC URL and credentials to the 'session login' command in this \
  module. As a best practice, 'session logout' should be run to terminate the session when \
  there are no more activities to be performed.  

# Shared options
delim = Change the default delimiter character when using options that accept \
  "application:version" as an argument or parameter. 
download.no-include-sources = Sources are included by default; use --no-include-sources to \
  download artifact without sources.
upload.filePath = The path to the file to be uploaded.
allow-multi-match = Allow for multiple matches.
fcli.ssc.q-param = Server-side queries are automatically generated from the -q / --query option \
  if possible; generated queries can be viewed in the debug log. The --q-param option can be used \
  to override the automatically generated query, for example to further optimize the request. See \
  SSC REST API documentation for information on supported formats.

# fcli ssc session
user.0 = SSC user name.
user.1 = Environment variables:%n \
  ${fcli.env.default.prefix}_SSC_USER: Shared with SC SAST/DAST%n \
  ${fcli.env.default.prefix}_SSC_SESSION_USER: Only SSC session commands
password.0 = SSC password.
password.1 = Environment variables:%n \
  ${fcli.env.default.prefix}_SSC_PASSWORD: Shared with SC SAST/DAST%n \
  ${fcli.env.default.prefix}_SSC_SESSION_PASSWORD: Only SSC session commands
ci-token.0 = SSC CIToken in either encoded (REST) or decoded (application) format. \
  Tokens can be created through the SSC web UI, or using the \
  'fcli ssc token create' command. Note that most, but not all, fcli commands \
  are available when logging in with a CIToken.
ci-token.1 = Environment variables:%n \
  ${fcli.env.default.prefix}_SSC_CI_TOKEN: Shared with SC SAST/DAST%n \
  ${fcli.env.default.prefix}_SSC_SESSION_CI_TOKEN: Only SSC session commands

fcli.ssc.session.usage.header = Manage SSC sessions (start here).
fcli.ssc.session.usage.description = The session commands allow for managing one or more \
  SSC sessions used to connect to a particular SSC instance with particular credentials. \
  Potentially you can have multiple open SSC sessions, for example connecting to different \
  SSC instances like DEV and PROD, or connecting to the same SSC instance but with different \
  credentials.
  
fcli.ssc.session.login.usage.header = Create a session for interacting with Fortify SSC.
fcli.ssc.session.login.usage.description.0 = This command stores the SSC URL and authentication \
  token in an encrypted session file in the fcli state data folder, for use by other 'fcli ssc' \
  commands to connect to the specified SSC instance. Option values may be passed on the command \
  line or specified through environment variables (common for CI/CD pipeline use) as listed below.
fcli.ssc.session.login.usage.description.1 = %nWhen logging in with username and password, this \
  command will connect to SSC to generate a UnifiedLoginToken; the user password is not stored \
  by fcli. When logging in with a pre-generated token, this token will be stored as-is. Note \
  that due to SSC limitations, fcli cannot validate whether the given token is a valid SSC token, \
  and doesn't known when it will expire. If an invalid or expired token is given, the 'login' \
  command may still succeed but subsequent 'fcli ssc' commands will fail. Also note that depending \
  on token type, some 'fcli ssc' commands may fail due to the token not being allowed to access \
  the necessary SSC API endpoints.
fcli.ssc.session.login.usage.description.2 = %nFor interactive use, you may choose to keep the session \
  open until it expires. For CI/CD integrations and other automations, you should always issue a \
  logout command once work is complete. On shared/non-containerized systems, consider setting \
  FCLI_STATE_DIR or FCLI_DATA_DIR environment variables to prevent unexpected interactions between \
  different pipelines.
fcli.ssc.session.login.expire-in = Specify for how long the session should remain active, for example \
  1h (1 hour), 1d (1 day).
fcli.ssc.session.login.url.0 = SSC URL.
fcli.ssc.session.login.url.1 = Environment variables:%n \
  ${fcli.env.default.prefix}_SSC_URL: Shared with SC SAST/DAST%n \
  ${fcli.env.default.prefix}_SSC_SESSION_URL: Only SSC session commands 
fcli.ssc.session.login.token.0 = SSC token in either encoded (REST) or decoded (application) format. \
   Tokens can be created through the SSC web UI, or using the \
  'fcli ssc token create' command. Note that depending on token permissions, not all fcli \
  commands may be available.
fcli.ssc.session.login.token.1 = Environment variables:%n \
  ${fcli.env.default.prefix}_SSC_TOKEN
  
fcli.ssc.session.logout.usage.header = Terminate Fortify SSC session.
fcli.ssc.session.logout.usage.description = This command terminates an SSC session previously created \
  through the 'login' command. This command will try to revoke the token passed to or generated by the \
  'login' command (unless the --no-revoke-token option is specified), and removes the session data from \
  the fcli state data directory. 
fcli.ssc.session.logout.no-revoke-token = Don't revoke the token passed to or generated by the 'login' \
  command. If user name and password were specified during login, it is recommended to have the 'logout' \
  command revoke this token, to avoid exceeding SSCs maximum token limit. Note that due to SSC limitations, \
  user credentials will need to be provided to allow for token revocation. If a pre-generated token was \
  specified during login, usually you'll want to pass this option to avoid the pre-generated token from \
  being revoked.
  
fcli.ssc.session.list.usage.header = List active and expired Fortify SSC sessions.
fcli.ssc.session.list.usage.description.0 = This commands lists all SSC sessions created through the `login` \
  command, as long as they haven't been explicitly terminated through the 'logout' command. %n
fcli.ssc.session.list.usage.description.1 = For sessions created using user name and password, the output \
  of this command will show session expiry date and status, based on the data provided by SSC at the time \
  the login command was issued. Any changes to the generated token will not be reflected in the output of \
  this command. Even if a session is no longer valid because the generated token was revoked (through SSC \
  UI or 'fcli ssc token revoke' command), the output of this command may still show the session as not having \
  expired. Similarly, any changes to token validity will not be reflected in the output of this command. %n
fcli.ssc.session.list.usage.description.2 = For sessions created using a pre-generated token, fcli cannot \
  display session expiration date or status, as SSC doesn't allow for obtaining this information.

# fcli ssc rest
fcli.ssc.rest.usage.header = Interact with SSC REST API endpoints.
fcli.ssc.rest.usage.description = These commands allow for direct interaction with SSC REST API endpoints, \
  somewhat similar to using 'curl' but benefiting from standard fcli functionality like session management \
  (no need to manually specify Authorization header), rich output formatting options, and query functionality.
fcli.ssc.rest.call.usage.header = Call an individual Fortify SSC REST API endpoint. 
fcli.ssc.rest.call.no-paging = By default, this command will load all pages of data from SSC \
  (from the given offset if specified as a request parameter). Use this option to return only a \
  single page. 
fcli.ssc.rest.call.no-transform = By default, this command performs generic transformations on SSC REST \
  responses, like only outputting the actual response data (contents of the 'data' property). Use this \
  option to output the original response contents without transformations.
fcli.ssc.rest.call.transform = This option allows for performing custom transformations on the response \
  data based on a Spring Expression Language (SpEL) expression. For example, this allows for retrieving \
  data from sub-properties, or using project selection/projection. Note that the expression operates on \
  the raw response, as if --no-transform was specified before evaluating the expression.
  

# fcli ssc activity-feed
fcli.ssc.activity-feed.usage.header = Manage SSC activity feed.
fcli.ssc.activity-feed.list.usage.header = List activity feed entries.

# fcli ssc alert-definition
fcli.ssc.alert-definition.usage.header = Manage SSC alert definitions.
fcli.ssc.alert-definition.get.usage.header = Get alert definition details.
fcli.ssc.alert-definition.get.id = Alert definition id.
fcli.ssc.alert-definition.list.usage.header = List alert definitions.

# fcli ssc alert
fcli.ssc.alert.usage.header = Manage SSC alerts.
fcli.ssc.alert.list.usage.header = List alerts.

# fcli ssc app
fcli.ssc.app.usage.header = Manage SSC applications.
fcli.ssc.app.delete.usage.header = Delete an application and all contained versions.
fcli.ssc.app.delete.confirm = Confirm deletion of all versions within the specified application.
fcli.ssc.app.get.usage.header = Get application details.
fcli.ssc.app.list.usage.header = List applications.
fcli.ssc.app.update.usage.header = Update an application.
fcli.ssc.app.update.name = New name for the application.
fcli.ssc.app.update.description = New description for the application.
fcli.ssc.app.resolver.nameOrId = Application name or id. Note that numeric values are always interpreted \
  as id's. If you have numeric application names, you will need to specify the application id.

# fcli ssc appversion
fcli.ssc.appversion.usage.header = Manage SSC application versions.
fcli.ssc.appversion.create.usage.header = Create an application version.
fcli.ssc.appversion.create.auto-required-attrs = Automatically set a default value for required application \
  version attributes.
fcli.ssc.appversion.create.description = Application version description.
fcli.ssc.appversion.create.active = Specify whether application version should be activated (true, default) \
  or not (false).
fcli.ssc.appversion.create.skip-if-exists = Skip application version creation if an application version with \
  the specified name already exists.
fcli.ssc.appversion.delete.usage.header = Delete an application version.
fcli.ssc.appversion.download-state.usage.header = Download application version state.
fcli.ssc.appversion.download-state.usage.description = Download application version state artifact. See 'fcli ssc artifact download' for downloading individual artifacts.
fcli.ssc.appversion.download-state.file = Optional output file path.
fcli.ssc.appversion.get.usage.header = Get application version details.
fcli.ssc.appversion.get.embed = Embed extra application version data. Allowed values: ${COMPLETION-CANDIDATES}.
fcli.ssc.appversion.list.usage.header = List application versions.
fcli.ssc.appversion.list.usage.description = By default, this command simply lists all application \
  versions. However, the --embed, --query and --output options allow for implementing advanced use cases. \
  Some examples: \
  %n%n List application versions created by user 'admin': \
  %n -q 'createdBy=="admin"' \
  %n%n List application versions requiring refresh: \
  %n -q 'refreshRequired' \
  %n%n List application versions with artifacts requiring approval: \
  %n -q 'currentState.attentionRequired' \
  %n%n List application versions with business risk 'High': \
  %n --embed attrValuesByGuid -q 'attrValuesByGuid["BusinessRisk"].contains("High")' \
  %n%n Generate script for purging all application versions: \
  %n -o 'expr=fcli ssc appversion purge-artifacts --older-than 30d {id}\\n'
fcli.ssc.appversion.list.embed = Embed extra application version data. Allowed values: ${COMPLETION-CANDIDATES}. \
  Using the --output option, this extra data can be included in the output. Using the --query option, \
  this extra data can be queried upon. To get an understanding of the structure and contents of the \
  embedded data, use the --output json or --output yaml options. 
fcli.ssc.appversion.purge-artifacts.usage.header = Purge application version artifacts.
fcli.ssc.appversion.purge-artifacts.usage.description = Purge all application version artifacts older than the specified date. See 'fcli ssc artifact purge' for purging individual artifacts. 
fcli.ssc.appversion.purge-artifacts.older-than = Purge artifacts older than the specified value, \
  in the format 30d (30 days), 1y (1 year).
fcli.ssc.appversion.refresh-metrics.usage.header = Refresh application version metrics.
fcli.ssc.appversion.refresh-metrics.usage.description = This command allows for refreshing SSC application \
  version metrics, similar to the little 'refresh' button shown on the SSC application version page \
  in case a refresh is required/pending.
fcli.ssc.appversion.update.usage.header = Update an application version.
fcli.ssc.appversion.update.name = Update application version name.
fcli.ssc.appversion.update.description = Update application version description.
fcli.ssc.appversion.resolver.name = Application and version name.
fcli.ssc.appversion.resolver.nameOrId = Application version id or <application>:<version> name.

# fcli ssc appversion-attribute
fcli.ssc.appversion-attribute.usage.header = Manage SSC application version attributes.
fcli.ssc.appversion-attribute.list.usage.header = List application version attributes.
fcli.ssc.appversion-attribute.update.usage.header = Set application version attributes. 
fcli.ssc.appversion-attribute.update.option = Set values for one or more attributes. This option accepts a comma-separated list of attribute value assignments.

# fcli ssc appversion-filterset
fcli.ssc.appversion-filterset.usage.header = Manage SSC application version filter sets.
fcli.ssc.appversion-filterset.get.usage.header = Get filter set details.
fcli.ssc.appversion-filterset.list.usage.header = List application version filter sets.
fcli.ssc.appversion-filter-set.resolver.titleOrId = Filter set title (name) or id.

# fcli ssc appversion-groupset
fcli.ssc.appversion-groupset.usage.header = Manage SSC application version group sets.
fcli.ssc.appversion-groupset.get.usage.header = Get group set details.
fcli.ssc.appversion-groupset.list.usage.header = List application version group sets.
fcli.ssc.appversion-group-set.resolver.displayNameOrId = Group set (groupBy) display name or id.

# fcli ssc appversion-performanceindicator
fcli.ssc.appversion-performanceindicator.usage.header = Manage SSC application version performance indicators.
fcli.ssc.appversion-performanceindicator.get.usage.header = Get performance indicator details.
fcli.ssc.appversion-performanceindicator.list.usage.header = List application version performance indicators.
fcli.ssc.appversion-performance-indicator.resolver.id = Performance indicator id.

# fcli ssc appversion-user
fcli.ssc.appversion-user.usage.header = Manage SSC application version users.
fcli.ssc.appversion-user.add.usage.header = Add users to an application version.
fcli.ssc.appversion-user.delete.usage.header = Delete users from an application version.
fcli.ssc.appversion-user.list.usage.header = List users assigned to an application version.
fcli.ssc.appversion-auth-entity.add.specs = Assign one or more (comma-separated) users or LDAP groups to \
  the application version; accepts user id, entity name or email address. Option is repeatable.
fcli.ssc.appversion-auth-entity.rm.specs = Remove one or more (comma-separated) users or LDAP groups from \
  the application version; accepts user id, entity name or email address. Option is repeatable.
fcli.ssc.appversion-auth-entity.specs = One or more users or LDAP groups; accepts user id, entity name \
  or email address.
  
# fcli ssc artifact
fcli.ssc.artifact.usage.header = Manage SSC artifacts.
fcli.ssc.artifact.approve.usage.header = Approve an artifact.
fcli.ssc.artifact.approve.message = Approval message, default value '${DEFAULT-VALUE}'.
fcli.ssc.artifact.delete.usage.header = Delete an artifact.
fcli.ssc.artifact.download.usage.header = Download an artifact.
fcli.ssc.artifact.download.usage.description = Download an artifact by id. See 'fcli ssc appversion download-state' for downloading application state.
fcli.ssc.artifact.download.file = Optional output file path.
fcli.ssc.artifact.get.usage.header = Get artifact details.
fcli.ssc.artifact.get.id = Id of the artifact to be retrieved.
fcli.ssc.artifact.list.usage.header = List application version artifacts.
fcli.ssc.artifact.import-debricked.usage.header = Import results from Debricked as SSC \
  application version artifact.
fcli.ssc.artifact.import-debricked.debricked-url = Debricked URL. Default value: ${DEFAULT-VALUE}.
fcli.ssc.artifact.import-debricked.debricked-user = Debricked user name / email address.
fcli.ssc.artifact.import-debricked.debricked-password = Password for the given debricked user.
fcli.ssc.artifact.import-debricked.debricked-access-token = Debricked long-lived access token.
fcli.ssc.artifact.import-debricked.engine-type = SSC engine type. Default value: ${DEFAULT-VALUE}.
fcli.ssc.artifact.import-debricked.save-sbom-as = Save a copy of the SBOM file downloaded from \
  Debricked to the given file.
fcli.ssc.artifact.import-debricked.repository = Debricked repository name or id.
fcli.ssc.artifact.import-debricked.branch = Branch in the given repository for which to retrieve the SBOM.
fcli.ssc.artifact.import-debricked.insecure = Disable SSC checks when connecting to Debricked.   
fcli.ssc.artifact.upload.usage.header = Upload an artifact.
fcli.ssc.artifact.upload.engine-type = Engine type specifying which SSC parser plugin should be \
  used to process the uploaded artifact. This option should only be used for raw 3rd-party results, not for \
  standard Fortify (FPR) results or 3rd-party results in a zip-file accompanied by a scan.info file.
fcli.ssc.artifact.wait-for.usage.header = Wait for SSC artifact to reach or exit specified artifact statuses.
fcli.ssc.artifact.wait-for.usage.description.0 = Although this command offers a lot of options to \
  cover many different use cases, you can simply pass an artifact id (possibly stored using --store on the \
  'artifact upload' command) to wait for artifact processing completion. If any error state or unknown state \
  is detected, an exception will be thrown.
fcli.ssc.artifact.wait-for.usage.description.1 = %nThe following states are currently known by fcli:
fcli.ssc.artifact.wait-for.usage.description.2 = ${fcli.ssc.artifact.states:-See fcli help output}
fcli.ssc.artifact.wait-for.until=Wait until either any or all artifacts match. If neither --until or --while are specified, default is to wait until all artifacts match.
fcli.ssc.artifact.wait-for.while=Wait while either any or all artifacts match.
fcli.ssc.artifact.wait-for.any-state=One or more processing states against which to match the given artifacts.
fcli.ssc.artifact.purge.usage.header = Purge an artifact.
fcli.ssc.artifact.purge.usage.description = Purge an individual artifact by id. See 'fcli ssc appversion purge-artifacts' for purging multiple artifacts by date. 
fcli.ssc.artifact.resolver.id = Artifact id.
fcli.ssc.artifact.resolver.ids = One or more artifact id's.
fcli.ssc.artifact.upload.file = File to upload.

# fcli ssc attribute-definition
fcli.ssc.attribute-definition.usage.header = Manage SSC attribute definitions.
fcli.ssc.attribute-definition.get.usage.header = Get attribute definition details.
fcli.ssc.attribute-definition.list.usage.header = List attribute definitions.
fcli.ssc.attribute-definition.resolver.nameOrId = Attribute definition name or id.

# fcli ssc event
fcli.ssc.event.usage.header = Manage SSC system events.
fcli.ssc.event.list.usage.header = List system events.

# fcli ssc issue-template
fcli.ssc.issue-template.usage.header = Manage SSC issue templates.
fcli.ssc.issue-template.create.usage.header = Create/upload an issue template.
fcli.ssc.issue-template.create.issue-template-file = File containing the issue template definition.
fcli.ssc.issue-template.create.description = Issue template description.
fcli.ssc.issue-template.create.file = Issue template file path.
fcli.ssc.issue-template.create.name = Issue template name.
fcli.ssc.issue-template.create.set-as-default = Set this issue template as the default issue template.
fcli.ssc.issue-template.delete.usage.header = Delete an issue template.
fcli.ssc.issue-template.download.usage.header = Download an issue template.
fcli.ssc.issue-template.download.file = Optional issue template file path.
fcli.ssc.issue-template.get.usage.header = Get issue template details.
fcli.ssc.issue-template.list.usage.header = List issue templates.
fcli.ssc.issue-template.update.usage.header = Update an issue template.
fcli.ssc.issue-template.update.name = Update issue template name.
fcli.ssc.issue-template.update.description = Update issue template description.
fcli.ssc.issue-template.update.set-as-default = Set this issue template as the default issue template. 
fcli.ssc.issue-template.resolver.nameOrId = Issue template name or id.

# fcli ssc job
fcli.ssc.job.usage.header = Manage SSC background jobs.
fcli.ssc.job.cancel.usage.header = Cancel a job.
fcli.ssc.job.get.usage.header = Get job details.
fcli.ssc.job.list.usage.header = List jobs.
fcli.ssc.job.update.usage.header = Update job priority.
fcli.ssc.job.update.priority = New priority for this job.
fcli.ssc.job.resolver.name = Job name.

# SSC plugins
fcli.ssc.plugin.usage.header = Manage SSC parser & bug tracker plugins.
fcli.ssc.plugin.disable.usage.header = Disable a plugin.
fcli.ssc.plugin.enable.usage.header = Enable a plugin.
fcli.ssc.plugin.get.usage.header = Get plugin details.
fcli.ssc.plugin.install.usage.header = Install a plugin.
fcli.ssc.plugin.install.file = Plugin jar file to install.
fcli.ssc.plugin.install.no-auto-enable = The plugin being installed will be enabled automatically, \
  unless the --no-auto-enable option is provided.
fcli.ssc.plugin.list.usage.header = List plugins.
fcli.ssc.plugin.uninstall.usage.header = Uninstall a plugin.
fcli.ssc.plugin.uninstall.no-auto-disable = The plugin being deleted will be automatically disabled, \
  unless the --no-auto-disable option is provided.
 fcli.ssc.plugin.resolver.numericId = Numeric plugin id.

# fcli ssc report-template
fcli.ssc.report-template.usage.header = Manage SSC report templates.
fcli.ssc.report-template.create.usage.header = Create/upload a report template.
fcli.ssc.report-template.create.config = File containing report template configuration, like report \
  parameters. You can use the 'generate-config' command to create a new configuration file template.
fcli.ssc.report-template.create.template = BIRT report template to be uploaded to SSC.
fcli.ssc.report-template.delete.usage.header = Delete a report template.
fcli.ssc.report-template.download.usage.header = Download a report template file.
fcli.ssc.report-template.download.file = Optional issue template file path.
fcli.ssc.report-template.generate-config.usage.header = Generate a sample report template configuration file.
fcli.ssc.report-template.generate-config.usage.description = Generate a sample report template configuration \
  file for use by the 'create' command. This configuration file defines settings like the name of the report \
  template, what parameters it accepts, and the types for those parameters. 
fcli.ssc.report-template.generate-config.config = Output file for the generated configuration.
fcli.ssc.report-template.generate-config.confirm = Confirm overwriting existing configuration file.
fcli.ssc.report-template.get.usage.header = Get report template details.
fcli.ssc.report-template.list.usage.header = List report template definitions.
reportTemplateNameOrId = The name or ID of the report template definition.

# fcli ssc role
fcli.ssc.role.usage.header = Manage SSC user roles.
fcli.ssc.role.create.usage.header = Create a role.
fcli.ssc.role.create.description = Role description.
fcli.ssc.role.create.universal-access = Set this role to have universal access to all SSC application versions.
fcli.ssc.role.create.permission-ids = Comma-separated list of permission id's to assign to this role.
fcli.ssc.role.delete.usage.header = Delete a role.
fcli.ssc.role.get.usage.header = Get role details.
fcli.ssc.role.list.usage.header = List roles.
fcli.ssc.role.resolver.nameOrId = Role name or id.
fcli.ssc.role.name = Role name.

# fcli ssc role-permission
fcli.ssc.role-permission.usage.header = Manage SSC role permissions.
fcli.ssc.role-permission.get.usage.header = Get role permission details.
fcli.ssc.role-permission.list.usage.header = List role permissions.
fcli.ssc.role-permission.resolver.nameOrId = Role permission name or id.

# fcli ssc seed-bundle
fcli.ssc.seed-bundle.usage.header = Manage SSC seed bundles.
fcli.ssc.seed-bundle.upload.usage.header = Upload a seed bundle.
fcli.ssc.seed-bundle.upload.file = Seed bundle to upload.

# fcli ssc token
fcli.ssc.token.usage.header = Manage SSC user tokens.
fcli.ssc.token.create.usage.header = Create a token.
fcli.ssc.token.create.expire-in = Expire token after the given time period, which is specified as \
  30m (30 minutes), 2h (2 hours), 1d (1 day).
fcli.ssc.token.create.description = Token description.
fcli.ssc.token.create.type = Token type, like CIToken, AnalysisUploadToken, ...
fcli.ssc.token.list.usage.header = List tokens.
fcli.ssc.token.revoke.usage.header = Revoke a token.
fcli.ssc.token.revoke.idsOrValues = Either one or more token id's, or one or more token values (comma-separated)
fcli.ssc.token.update.usage.header = Update a token.
fcli.ssc.token.update.token-id = Token id as shown by token create and list commands. Note that this \
  command does not accept the actual token value.
fcli.ssc.token.update.expire-in = Update token expiration period, specified as 30m (30 minutes), \
  2h (2 hours), 1d (1 day).
fcli.ssc.token.update.description = Update token description.

# fcli ssc token-definition
fcli.ssc.token-definition.usage.header = Manage SSC token definitions.
fcli.ssc.token-definition.list.usage.header = List token definitions.

# fcli ssc user
fcli.ssc.user.usage.header = Manage SSC users.
fcli.ssc.user.create.usage.header = Create a local SSC User
fcli.ssc.user.create.email = The email of the user
fcli.ssc.user.create.firstname = The first name of the user
fcli.ssc.user.create.lastname = The last name of the user
fcli.ssc.user.create.password-never-expires = Causes the password of the user not to expire
fcli.ssc.user.create.require-password-change = Requires the password of the user to be changed
fcli.ssc.user.create.suspend = Causes the user to automatically be su
fcli.ssc.user.create.username = The username of the user
fcli.ssc.user.delete.usage.header = Delete a user.
fcli.ssc.user.get.usage.header = Get user details.
fcli.ssc.user.list.usage.header = List users.
fcli.ssc.user.rm.spec = Remove one or more users or LDAP groups; accepts user id, entity name \
  or email address.
fcli.ssc.user.resolver.spec = User or LDAP group, accepting user id, entity name, or email address.

# fcli ssc vulnerability
fcli.ssc.vulnerability.usage.header = Manage SSC vulnerabilities.
fcli.ssc.vulnerability.count.usage.header = Count application version vulnerabilities by grouping.
fcli.ssc.vulnerability.count.by = Vulnerability grouping type. See SSC REST API documentation for \
  allowed values. Default value: ${DEFAULT-VALUE}.

#################################################################################################################
# The following are technical properties that shouldn't be internationalized ####################################
#################################################################################################################

# Property default values that are usually set when running fcli, but which may not be available when 
# generating AsciiDoc man-pages.
fcli.env.default.prefix=FCLI_DEFAULT

# Table output columns configuration
fcli.ssc.activity-feed.output.table.options = eventDate,userName,eventType,detailedNote,applicationVersionId,entityId
fcli.ssc.alert-definition.output.table.options = id,name,createdBy,recipientType,monitoredEntityType,triggerDescriptionName
fcli.ssc.alert.output.table.options = id,triggeredDate,alertDefinitionName,userName,alertMessage,applicationAndVersionLabel
fcli.ssc.app.output.table.options = id,name,description
fcli.ssc.app.delete.output.table.options = id,application.name,name,createdBy,action
fcli.ssc.appversion.output.table.options = id,application.name,name,issueTemplateName,createdBy
# TODO Add scanTypes property using recordTransformer in command implementation
fcli.ssc.artifact.output.table.options = id,scanTypes,lastScanDate,uploadDate,status
fcli.ssc.appversion-attribute.output.table.options = id,category,guid,name,valueString
fcli.ssc.appversion-user.output.table.options = id,entityName,displayName,type,email,isLdap
fcli.ssc.appversion-filterset.output.table.options = guid,title,defaultFilterSet,description
fcli.ssc.attribute-definition.output.table.options = id,category,guid,name,type,required
fcli.ssc.event.output.table.options = eventDate,userName,eventType,detailedNote,applicationVersionId,entityId
fcli.ssc.issue-template.output.table.options = id,name,inUse,defaultTemplate,publishVersion,originalFileName,description
fcli.ssc.job.output.table.options = jobName,jobGroup,jobClass,state,cancellable,priority,createTime,startTime,finishTime
fcli.ssc.plugin.output.table.options = id,pluginId,pluginType,pluginName,pluginVersion,pluginState
fcli.ssc.report-template.output.table.options = id,name,type,templateDocId,inUse
fcli.ssc.report-template.generate-config.output.table.options = path
# TODO Rename allApplicationRole to universalAccess in command implementation
fcli.ssc.role.output.table.options = id,name,builtIn,allApplicationRole,description
fcli.ssc.role-permission.output.table.options = id,name,dependsOnPermission,description
fcli.ssc.session.output.table.options = name,type,url,created,expires,expired
fcli.ssc.seed-bundle.output.table.options = responseCode
fcli.ssc.token.output.table.options = id,username,type,creationDate,terminalDate,timeRemaining,description 
fcli.ssc.token.create.output.table.options = id,username,type,restToken,applicationToken,terminalDate,timeRemaining,description
fcli.ssc.token.revoke.output.table.options = responseCode
fcli.ssc.token-definition.output.table.options = type,maxDaysToLive,maxUsages,capabilityDescription
fcli.ssc.user.output.table.options = id,entityName,displayName,type,email,isLdap
fcli.ssc.vulnerability.count.output.table.options = cleanName,totalCount,auditedCount

