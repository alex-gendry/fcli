plugins {
    id('com.github.jk1.dependency-license-report') version '2.5' apply false
    id("com.github.johnrengelman.shadow") version "8.1.1" apply false
    id "org.asciidoctor.jvm.convert" version "3.3.2" apply false
    id "io.freefair.lombok" version "8.1.0" apply false
}

group = "com.fortify.cli"

ext {
	buildTime = LocalDateTime.now()
	getVersion = {
    	def result = project.findProperty('version');
    	return !result || result=='unspecified' ? buildTime.format('0.yyyyMMdd.HHmmss') : result;
	}
}

allprojects {
	apply plugin: 'eclipse'
	version = rootProject.ext.getVersion();
	ext {
		buildRootDir = "$rootDir/buildRoot"
		distDir = "${buildDir}/dist"
		releaseAssetsDir = "${distDir}/release-assets"
		gradleHelpersLocation = "https://raw.githubusercontent.com/fortify/shared-gradle-helpers/1.8"
	}
	
	// Define Maven Central repository
	repositories {
		mavenCentral()
	}
	tasks.register('createDistDir') {
		doLast {
			mkdir "${distDir}"
			mkdir "${releaseAssetsDir}"
		}
	}
}

subprojects {
	// Disallow sub-projects from having a dist task;
	// they should have a distLocal task instead.
	task dist {}
}

configure(allprojects.findAll {it.path.startsWith "$buildRootProject:modules:"}) {
	apply from: "$buildRootDir/_gradle/module.gradle"
}
task clean(type: Delete) {
    delete "build"
}
task build(type: Copy) {
	dependsOn("${buildRootProject}:app:fcli:build")
	from "${buildRootDir}/app/fcli/build/libs/fcli.jar"
	into "build/libs"
}
task dist(type: Copy) {
	dependsOn(createDistDir)
	// For now, this tasks assumes that any subproject that needs to add anything to the dist
	// directory implements a distLocal task, and adds this distLocal task as a dependency for
	// this dist task, using: rootProject.dist.dependsOn(distLocal).
	from { subprojects.collect { it.ext.distDir } }
	from("${projectDir}") {
        include "LICENSE.txt"
    }
	into "${distDir}"
}
task distThirdParty(type: Copy) {
	dependsOn(createDistDir)
	dependsOn("${buildRootProject}:app:fcli:distThirdPartyReleaseAsset")
	from "${buildRootDir}/app/fcli/build/dist-thirdparty"
	into "${distDir}"
}